// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Check the health and connectivity of the service and Solana RPC",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/internal_server.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy - Solana RPC issues",
                        "schema": {
                            "$ref": "#/definitions/internal_server.HealthResponse"
                        }
                    }
                }
            }
        },
        "/price": {
            "get": {
                "description": "Fetch current prices for SOL/USD, xSOL/SOL, and xSOL/USD with caching",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "price"
                ],
                "summary": "Get current asset prices",
                "responses": {
                    "200": {
                        "description": "Current asset prices",
                        "schema": {
                            "$ref": "#/definitions/hylo-wallet-tracker-api_internal_price.CombinedPriceResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Network connectivity error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/{address}/balances": {
            "get": {
                "description": "Fetch balances for hyUSD, sHYUSD, and xSOL tokens for a specific wallet address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get wallet token balances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address (base58 encoded)",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet token balances",
                        "schema": {
                            "$ref": "#/definitions/hylo-wallet-tracker-api_internal_tokens.WalletBalances"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Network connectivity error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/{address}/trades": {
            "get": {
                "description": "Fetch paginated xSOL trade history for a specific wallet address with real-time RPC data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get wallet xSOL trade history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address (base58 encoded)",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of trades to return (1-50, default 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination - signature to fetch trades before",
                        "name": "before",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet xSOL trade history",
                        "schema": {
                            "$ref": "#/definitions/hylo-wallet-tracker-api_internal_trades.TradeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Network connectivity error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "hylo-wallet-tracker-api_internal_hylo.XSOLTrade": {
            "type": "object",
            "properties": {
                "blockTime": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "counterAmount": {
                    "description": "Formatted counter-asset amount",
                    "type": "string"
                },
                "counterAsset": {
                    "description": "\"SOL\" or \"hyUSD\"",
                    "type": "string"
                },
                "explorerUrl": {
                    "description": "Solscan transaction URL",
                    "type": "string"
                },
                "side": {
                    "description": "Trade details",
                    "type": "string"
                },
                "signature": {
                    "description": "Transaction identifiers",
                    "type": "string"
                },
                "slot": {
                    "description": "Solana slot number",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Display fields",
                    "type": "string"
                },
                "xsolAmount": {
                    "description": "Formatted xSOL amount (e.g., \"1.5\")",
                    "type": "string"
                }
            }
        },
        "hylo-wallet-tracker-api_internal_price.CombinedPriceResponse": {
            "type": "object",
            "properties": {
                "sol_usd": {
                    "description": "SOLUSD is the current SOL price in USD",
                    "type": "number"
                },
                "updated_at": {
                    "description": "UpdatedAt indicates the timestamp of the most recent price update",
                    "type": "string"
                },
                "xsol_sol": {
                    "description": "XSOLInSOL is the current xSOL price in SOL terms",
                    "type": "number"
                },
                "xsol_usd": {
                    "description": "XSOLInUSD is the current xSOL price in USD terms",
                    "type": "number"
                }
            }
        },
        "hylo-wallet-tracker-api_internal_tokens.TokenBalance": {
            "type": "object",
            "properties": {
                "decimals": {
                    "description": "Decimals is the number of decimal places for this token",
                    "type": "integer"
                },
                "formatted_amount": {
                    "description": "FormattedAmount is the human-readable amount with proper decimal adjustment",
                    "type": "string"
                },
                "raw_amount": {
                    "description": "RawAmount is the raw token amount as stored on-chain (without decimal adjustment)",
                    "type": "integer"
                },
                "usd_value": {
                    "description": "USDValue is the USD value of this token balance (optional, for display)",
                    "type": "number"
                }
            }
        },
        "hylo-wallet-tracker-api_internal_tokens.WalletBalances": {
            "type": "object",
            "properties": {
                "balances": {
                    "description": "Balances is a map of token symbol to token balance",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/hylo-wallet-tracker-api_internal_tokens.TokenBalance"
                    }
                },
                "slot": {
                    "description": "Slot is the Solana slot when these balances were fetched",
                    "type": "integer"
                },
                "total_usd_value": {
                    "description": "TotalUSDValue is the sum of all token balances in USD (optional)",
                    "type": "number"
                },
                "updated_at": {
                    "description": "UpdatedAt is the timestamp when these balances were last updated",
                    "type": "string"
                },
                "wallet": {
                    "description": "Wallet is the wallet address these balances belong to",
                    "type": "string"
                }
            }
        },
        "hylo-wallet-tracker-api_internal_trades.PaginationInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count is the number of items in the current response",
                    "type": "integer"
                },
                "hasMore": {
                    "description": "HasMore indicates if there are more trades available",
                    "type": "boolean"
                },
                "limit": {
                    "description": "Limit is the maximum number of items per page",
                    "type": "integer"
                },
                "nextCursor": {
                    "description": "NextCursor is the signature cursor for the next page\nOnly present when HasMore is true",
                    "type": "string"
                }
            }
        },
        "hylo-wallet-tracker-api_internal_trades.TradeResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "Number of trades returned",
                    "type": "integer"
                },
                "pagination": {
                    "description": "Pagination metadata for frontend navigation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/hylo-wallet-tracker-api_internal_trades.PaginationInfo"
                        }
                    ]
                },
                "requestedAt": {
                    "type": "string"
                },
                "trades": {
                    "description": "Trades is the array of xSOL trades for this wallet",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hylo-wallet-tracker-api_internal_hylo.XSOLTrade"
                    }
                },
                "walletAddress": {
                    "description": "Request metadata",
                    "type": "string"
                }
            }
        },
        "internal_server.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "For categorizing errors",
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "internal_server.HealthResponse": {
            "type": "object",
            "properties": {
                "solana": {},
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Hylo Wallet Tracker API",
	Description:      "Read-only REST API for tracking Solana wallet activity and metrics for the Hylo protocol. Provides real-time wallet balances (hyUSD, sHYUSD, xSOL), price data (SOL/USD, xSOL pricing), and transaction history.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
